{
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "kbd",
    "type": "registry:ui",
    "title": "Keyboard Key",
    "description": "A component for displaying keyboard shortcuts and key combinations with proper styling and icons.",
    "files": [
        {
            "path": "components/ace-ui/Kbd.tsx",
            "type": "registry:ui",
            "target": "components/ui/kbd.tsx",
            "content": "\"use client\"\nimport React from \"react\"\nimport { cn } from \"@/lib/utils\"\nexport type KbdKey =\n    | \"command\"\n    | \"shift\"\n    | \"ctrl\"\n    | \"option\"\n    | \"enter\"\n    | \"delete\"\n    | \"escape\"\n    | \"tab\"\n    | \"capslock\"\n    | \"up\"\n    | \"right\"\n    | \"down\"\n    | \"left\"\n    | \"pageup\"\n    | \"pagedown\"\n    | \"home\"\n    | \"end\"\n    | \"help\"\n    | \"space\"\n    | \"fn\"\n    | \"win\"\n    | \"alt\"\n    | string\nconst keyIcons: Record<string, string> = {\n    command: \"⌘\",\n    shift: \"⇧\",\n    ctrl: \"⌃\",\n    option: \"⌥\",\n    enter: \"⏎\",\n    delete: \"⌫\",\n    escape: \"⎋\",\n    tab: \"⇥\",\n    capslock: \"⇪\",\n    up: \"↑\",\n    down: \"↓\",\n    left: \"←\",\n    right: \"→\",\n    pageup: \"⇞\",\n    pagedown: \"⇟\",\n    home: \"⇱\",\n    end: \"⇲\",\n    help: \"?\",\n    space: \"␣\",\n    fn: \"fn\",\n    win: \"⊞\",\n    alt: \"⎇\",\n}\ninterface KbdProps extends React.HTMLAttributes<HTMLDivElement> {\n    keys: KbdKey[]\n    variant?: \"default\" | \"outline\" | \"ghost\"\n    size?: \"sm\" | \"md\" | \"lg\"\n}\nexport function Kbd({ keys, className, variant = \"default\", size = \"md\", ...props }: KbdProps) {\n    const variants = {\n        default:\n            \"bg-gradient-to-b from-gray-100 to-gray-200 border-gray-300 text-gray-800 shadow-[0_2px_0_0_rgb(0,0,0,0.1),inset_0_1px_0_0_rgb(255,255,255,0.8)] dark:from-gray-700 dark:to-gray-800 dark:border-gray-600 dark:text-gray-200 dark:shadow-[0_2px_0_0_rgb(0,0,0,0.3),inset_0_1px_0_0_rgb(255,255,255,0.1)]\",\n        outline: \"bg-transparent border-2 border-gray-300 text-gray-700 shadow-sm dark:border-gray-600 dark:text-gray-300\",\n        ghost:\n            \"bg-gray-100/50 border-gray-200 text-gray-600 shadow-sm dark:bg-gray-800/50 dark:border-gray-700 dark:text-gray-400\",\n    }\n    const sizes = {\n        sm: \"gap-0.5 px-1 py-0.5 text-[9px] min-h-[18px]\",\n        md: \"gap-1 px-1.5 py-1 text-[10px] min-h-[22px]\",\n        lg: \"gap-1.5 px-2 py-1 text-xs min-h-[26px]\",\n    }\n    const keySizes = {\n        sm: \"px-0.5 py-0.5 min-w-[14px]\",\n        md: \"px-1 py-0.5 min-w-[16px]\",\n        lg: \"px-1.5 py-1 min-w-[20px]\",\n    }\n    const iconTextSizes = {\n        sm: \"text-xs\",\n        md: \"text-sm\",\n        lg: \"text-lg\",\n    }\n    return (\n        <div\n            className={cn(\n                \"inline-flex select-none items-center justify-center rounded-md border font-mono font-medium transition-all\",\n                variants[variant],\n                sizes[size],\n                className,\n            )}\n            {...props}\n        >\n            {keys.map((key, i) => {\n                const icon = keyIcons[key.toLowerCase()] || key.toUpperCase()\n                return (\n                    <div key={i}>\n                        <span\n                            className={cn(\n                                \"inline-flex items-center justify-center rounded leading-none\",\n                                keySizes[size],\n                                iconTextSizes[size]\n                            )}\n                        >\n                            {icon}\n                        </span>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}"
        }
    ]
}